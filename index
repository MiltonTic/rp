<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .container {
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      max-width: 400px;
      margin: 0 auto;
    }
    h2 {
      color: #1a73e8;
      margin-bottom: 20px;
    }
    .form-group {
      margin-bottom: 15px;
      text-align: left;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="text"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 18px;
      text-align: center;
      letter-spacing: 2px;
    }
    #status {
      margin-top: 15px;
      padding: 10px;
      border-radius: 4px;
      display: none;
    }
    .success {
      background-color: #e6f4ea;
      color: #137333;
      display: block;
    }
    .error {
      background-color: #fce8e6;
      color: #c5221f;
      display: block;
    }
    .info {
      background-color: #e8f0fe;
      color: #1967d2;
      display: block;
    }
    .counter {
      margin-top: 10px;
      font-size: 14px;
      color: #5f6368;
    }
  </style>
</head>
<body onload="focusOnBarcode()">
  <div class="container">
    <h2>Leitor de Código de Barras</h2>
   
    <div class="form-group">
      <label for="barcode">Código de Barras (5 dígitos):</label>
      <input type="text" id="barcode" name="barcode" pattern="[0-9]{5}"
             title="Escaneie o código de 5 dígitos"
             placeholder="Escaneie o código"
             oninput="checkBarcodeLength(this)"
             onkeypress="handleEnterKey(event)">
    </div>
   
    <p id="status"></p>
    <div class="counter">Registros enviados: <span id="counter">0</span></div>
  </div>

  <script>
    let isProcessing = false;
    let successCount = 0;

    function focusOnBarcode() {
      document.getElementById("barcode").focus();
    }
   
    function checkBarcodeLength(input) {
      if (input.value.length === 5 && !isProcessing) {
        getLocation();
      }
    }
   
    function handleEnterKey(event) {
      if (event.key === "Enter") {
        event.preventDefault(); // Impede o comportamento padrão do Enter
        if (!isProcessing) {
          getLocation();
        }
      }
    }
   
    function getLocation() {
      isProcessing = true;
      const status = document.getElementById("status");
      const barcodeInput = document.getElementById("barcode");
      const barcode = barcodeInput.value;
     
      // Validação do código de barras
      if (!barcode || !/^\d{5}$/.test(barcode)) {
        status.textContent = "Código de barras deve ter exatamente 5 dígitos numéricos.";
        status.className = "error";
        status.style.display = "block";
        isProcessing = false;
        return;
      }
     
      status.textContent = "Obtendo localização...";
      status.className = "info";
      status.style.display = "block";

      if (!navigator.geolocation) {
        status.textContent = "Geolocalização não é suportada neste navegador.";
        status.className = "error";
        isProcessing = false;
        return;
      }

      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords;
          status.textContent = "Enviando dados...";
          status.className = "info";
         
          google.script.run
            .withSuccessHandler(() => {
              successCount++;
              document.getElementById("counter").textContent = successCount;
              status.textContent = "Dados enviados com sucesso!";
              status.className = "success";
              barcodeInput.value = ""; // Limpa o campo após o envio
              isProcessing = false;
              
              setTimeout(() => {
                status.style.display = "none";
                focusOnBarcode(); // Foca novamente no campo para nova leitura
              }, 2000); // Esconde a mensagem após 2 segundos
            })
            .withFailureHandler((err) => {
              status.textContent = "Erro: " + err;
              status.className = "error";
              isProcessing = false;
              setTimeout(() => {
                status.style.display = "none";
                focusOnBarcode();
              }, 3000);
            })
            .saveLocation(latitude, longitude, barcode);
        },
        (error) => {
          let errorMsg;
          switch(error.code) {
            case error.PERMISSION_DENIED:
              errorMsg = "Permissão negada pelo usuário.";
              break;
            case error.POSITION_UNAVAILABLE:
              errorMsg = "Localização indisponível.";
              break;
            case error.TIMEOUT:
              errorMsg = "Tempo de solicitação excedido.";
              break;
            default:
              errorMsg = "Erro desconhecido.";
          }
          status.textContent = errorMsg;
          status.className = "error";
          isProcessing = false;
          setTimeout(() => {
            status.style.display = "none";
            focusOnBarcode();
          }, 3000);
        },
        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
      );
    }
  </script>
</body>
</html>
